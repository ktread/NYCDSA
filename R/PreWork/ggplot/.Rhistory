geom_smooth(aes(x = displ, y = hwy), method="lm")
g + geom_point(aes(color = class)) +
geom_point(aes(x=mean(displ), y=mean(hwy)), size=8)
g + geom_point() + facet_grid(. ~ cyl)
g + geom_point() + facet_grid(drv ~ .)
g + geom_point() + facet_grid(drv ~ cyl)
g + geom_point() + facet_wrap( ~ class)
g + geom_point() + facet_wrap( ~ class)
g + geom_point() + facet_wrap( ~ class, ncol = 10)
g + geom_smooth()
ggplot(data = mpg, aes(x = class, y = hwy)) + geom_smooth()
ggplot(data = mpg, aes(x = class, y = hwy)) + geom_hist()
g + geom_point()
g + geom_smooth()
g + geom_hist() # not always work
g + geom_histogram() # not always work
g + geom_boxplot()
g + geom_histogram() # not always work
g + geom_boxplot()
ggplot(data = mpg, aes(x = class, y = hwy)) + geom_point()
ggplot(data = mpg, aes(x = class, y = hwy)) + geom_boxplot()
ggplot(
data = mpg,
aes(x = reorder(class, hwy), y = hwy)
) + geom_boxplot()
reorder
mpg$class
levels(mpg$class)
?reorder
ggplot(
data = mpg,
aes(x = reorder(class, hwy, FUN=median), y = hwy)
) + geom_boxplot()
?reorder
ggplot(data = diamonds,aes(x=cut)) +
geom_bar(aes(fill=cut))
ggplot(data = diamonds,aes(x=cut)) +
geom_bar(
aes(fill=cut), position="stack"
)
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut))
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut))
ggplot(data = diamonds,aes(x=cut)) +
geom_bar(aes(fill=cut))
# Mixed Categorical Features
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut))
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut), position="fill")
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut), position="dodge")
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>% head()
library(dplyr)
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>% head()
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(n/sum(n))
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
summarise(sum(ratio))
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, color=cut
), position = dodge
)
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, color=cut
), position = "dodge"
)
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, fill=cut
), position = "dodge"
)
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, y=ratio, fill=cut
), position = "dodge", stats="identity"
)
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, y=ratio, fill=cut
), position = "dodge", stat="identity"
)
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut))
ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut))
ggplot(data = diamonds, aes(x =color)) +
geom_bar(aes(fill = cut), position="fill")
ggplot(data = diamonds, aes(x =color)) +
geom_bar(aes(fill = cut), position="dodge")
x = rnorm(20)
x
X = data.frame(x=rnorm(20))
X
g <- ggplot(data = diamonds, aes(x = carat))
g + geom_histogram(binwidth = 1)
g + geom_histogram(binwidth = 0.1)
g + geom_histogram(binwidth = 0.01)
g + geom_histogram()
g <- ggplot(data = diamonds, aes(x = depth))
zoom <- coord_cartesian(xlim = c(55, 70))
g
g + geom_histogram(binwidth = 0.2)
g + geom_histogram(binwidth = 0.2) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2,
position = position_stack(reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2# ,
# position = position_stack(reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
position = position_stack(reverse=TRUE)
) + zoom
?position_stack
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
vjust = 1,
position = position_stack(reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
position = position_stack(vjust = 1,reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
position = position_fill(reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
position = position_stack(reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
position = position_stack(reverse=F)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2 ,
position = position_stack(reverse=TRUE)
) + zoom
g + geom_histogram(
aes(fill=cut), binwidth = 0.2
) + zoom
?histogram
?geom_histogram
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, y=ratio, fill=cut
), position = "dodge", stat="identity"
)
diamonds %>%
ggplot() +
geom_bar(aes(
x=color, y=..density.., fill=cut
), position = "dodge", stat="identity"
)
diamonds %>%
ggplot() +
geom_bar(aes(
x=color, fill=cut
), position = "dodge"
)
?geom_bar
diamonds %>%
ggplot() +
geom_bar(aes(
x=color, y=(..count..)/sum(..count..), fill=cut
), position = "dodge"
)
diamonds %>%
group_by(color, cut) %>%
summarise(n=n()) %>%
mutate(ratio = n/sum(n)) %>%
ungroup() %>%
ggplot() +
geom_bar(aes(
x=color, y=ratio, fill=cut
), position = "dodge", stat="identity"
)
diamonds %>%
ggplot() +
geom_bar(aes(
x=color, y=(..count..)/sum(..count..), fill=cut
), position = "dodge"
)
# band width
?geom_smooth
g <- ggplot(data = diamonds, aes(x = carat, y = price))
g + geom_smooth(aes(color = cut), se = FALSE)
g + geom_smooth(aes(color = cut), method="lm", se = FALSE)
g + geom_smooth(aes(color = cut), method="loess", se = FALSE)
g + geom_smooth(aes(color = cut), se = FALSE)
g + geom_smooth(aes(color = cut), method="lm", se = FALSE)
g + geom_smooth(aes(color = cut), method="loess", se = FALSE)
?geom_smooth
?geom_smooth
ggplot(data = diamonds[1:900,], aes(x = carat, y = price)
)+ geom_smooth(aes(color = cut), se = FALSE)
library(ggplot2)
texas = read.csv("data/texas.csv")
setwd("~/Desktop/ggplot_course")
texas = read.csv("data/texas.csv")
head(texas)
g + geom_polygon(aes(group = group))
texas2 = texas[sample(nrow(texas)), ]
ggplot(data = texas2, aes(x = long, y = lat)) +
geom_polygon(aes(group = group))
ggplot(
data = texas2 %>% arrange(group, order),
aes(x = long, y = lat)
) +
geom_polygon(aes(group = group))
library(dplyr)
ggplot(
data = texas2 %>% arrange(group, order),
aes(x = long, y = lat)
) +
geom_polygon(aes(group = group))
g <- ggplot(data = texas, aes(x = long, y = lat))
g + geom_polygon(aes(group = group))
ggplot(
data = texas2,
aes(x = long, y = lat)
) +
geom_polygon(aes(group = group))
tx <- g + geom_polygon(aes(group = group, fill = bin))
tx
tx + ggtitle("Population of Texas Counties")
class(tx)
class(str(tx))
class(tx)
str(tx)
t <- str(tx)
t
?str
g <- ggplot(
data = diamonds, aes(x = carat, y = price)
) +
geom_point()
str(g)
g$coordinates
g + coord_polar()
g + coord_flip()
g + coord_fixed(ratio = 1/10000)
g + coord_trans(y = "log10")
g + coord_trans(y = "log10", x = "log10")
g + coord_cartesian(ylim = c(0,5000), xlim = c(0, 1))
ggplot(
data = mpg,
aes(x = displ, y = hwy)
) +
geom_point(aes(color = cty))
geom_point(aes(color = cty)) + scale_color_gradient(low = "red", high = "yellow")
ggplot(
data = mpg,
aes(x = displ, y = hwy)
) +
geom_point(aes(color = cty)) + scale_color_gradient(low = "red", high = "yellow")
geom_point(aes(size = cyl)) # + scale_size_are()
ggplot(
data = mpg,
aes(x = displ, y = hwy)) +
geom_point(aes(size = cyl)) # + scale_size_are()
ggplot(
data = mpg,
aes(x = displ, y = hwy)) +
geom_point(aes(size = cyl))  + scale_size_are()
ggplot(
data = mpg,
aes(x = displ, y = hwy)) +
geom_point(aes(size = cyl))  + scale_size_area()
geom_point(aes(shape = fl))  + scale_shape_manual(values = c(0, 15, 1, 16, 3))
ggplot(
data = mpg,
aes(x = displ, y = hwy)) +
geom_point(aes(shape = fl))  + scale_shape_manual(values = c(0, 15, 1, 16, 3))
tx + scale_fill_brewer(palette = "OrRd")
tx + scale_fill_manual(values = c("red", "orange", "yellow", "green", "blue"))
tx + theme(
panel.border = element_rect(
colour = "black", fill = NA
)
)
tx + theme(
# panel.border = element_rect(
#   colour = "black", fill = NA
#   )
strip.text.x = element_blank()
)
tx + theme(
# panel.border = element_rect(
#   colour = "black", fill = NA
#   )
# strip.text.x = element_blank()
)
tx + theme(
# panel.border = element_rect(
#   colour = "black", fill = NA
#   )
strip.background = element_blank()
)
tx + theme(
# panel.border = element_rect(
#   colour = "black", fill = NA
#   )
strip.background = element_blank()
)
tx + theme(
# panel.border = element_rect(
#   colour = "black", fill = NA
#   )
)
ggplot(mtcars, aes(mpg, hp)) + geom_point() +
facet_wrap(~carb, ncol = 3) + theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
ggplot(mtcars, aes(mpg, hp)) + geom_point() +
facet_wrap(~carb, ncol = 3) + theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
tx + theme(
panel.border = element_rect(
colour = "black", fill = NA
)
)
tx + theme_grey()
tx + theme_bw()
tx
tx + theme(
axis.text.x = NA
)
tx + theme(
axis.text.x = element_blank()
)
tx + theme(
panel.border = element_rect(
colour = "black", fill = "white"
)
)
tx + theme(
panel.border = element_rect(
colour = "black", fill = NA
)
)
tx + scale_fill_brewer(palette = "Blues") +
xlab("") +
ylab("") +
theme_bw() +
coord_map() +
ggtitle("Population of Texas Counties")
library(ggmaps)
library(ggmap)
tx
library(maps)
tx + scale_fill_brewer(palette = "Blues") +
xlab("") +
ylab("") +
theme_bw() +
coord_map() +
ggtitle("Population of Texas Counties")
install.packages("mapproj")
library(maps)
tx + scale_fill_brewer(palette = "Blues") +
xlab("") +
ylab("") +
theme_bw() +
coord_map() +
ggtitle("Population of Texas Counties")
tx + scale_fill_brewer(palette = "Blues") +
xlab("") +
ylab("") +
theme_bw() +
coord_map() +
ggtitle("Population of Texas Counties")
ggplot(
data = mpg,
aes(x = displ, y = hwy)) +
geom_point(aes(color = cty)) + theme(legend.position = "bottom")
q <- ggplot(
data = mpg,
aes(x = displ, y = hwy)) +
geom_point(aes(color = cty))
q + theme(legend.position = "bottom")
q + guides(color = "colorbar")
q + guides(color = "legend")
q + guides(color = "none")
tx + scale_fill_grey(name = "Legend")
tx + scale_fill_brewer(
palette = "Blues",
name = "Population",
labels = c(
"0 - 999", "1,000 - 9,999", "10,000 - 99,999",
"100,000 - 999,999", "1,000,000+")
) +
xlab("") +
ylab("") +
theme_bw() +
coord_map() +
ggtitle("Population of Texas Counties")
library(vcd)
mosaic(
Survived ~ Class + Sex,
data=Titanic, shade=T,
highlighting_fill=c('red4',"skyblue"),
highlighting_direction="left"
)
mosaic(
Survived ~ Class + Sex,
data=Titanic, shade=T
)
?mosaic
library(treemap)
install.packages("treemap")
library(treemap)
data = read.csv('data/apple.csv', TRUE)
treemap(data,
index=c("item", "subitem"),
vSize="time1206",
vColor="time1106",
type="comp",
title='Apple Corp. Financial Statements',
palette='RdBu')
data %>% head()
data <- read.csv('data/soft_impact.csv', TRUE)
library(tidyr)
data %>% head()
data %>%
gather(key="lang", value="impact", SPSS:R) %>% head()
nrow(data)
data %>%
gather(key="lang", value="impact", SPSS:R) %>% head(20)
data %>%
gather(key="lang", value="impact", SPSS:R) %>% # head(20)
ggplot(
aes(x=Year, y=imapct, group=lang, fill=lang)
) + geom_area
data %>%
gather(key="lang", value="impact", SPSS:R) %>% # head(20)
ggplot(
aes(x=Year, y=imapct, group=lang, fill=lang)
) + geom_area()
data %>%
gather(key="lang", value="impact", SPSS:R) %>% # head(20)
ggplot(
aes(x=Year, y=impact, group=lang, fill=lang)
) + geom_area()
data %>%
gather(key="lang", value="impact", SPSS:R) %>% # head(20)
ggplot(
aes(x=Year, y=impact, group=lang, fill=lang)
) + geom_area(position="fill")
head(data)
data %>%
gather(key="lang", value="impact", JMP:R) %>% # head(20)
ggplot(
aes(x=Year, y=impact, group=lang, fill=lang)
) + geom_area(position="fill")
data %>%
gather(key="lang", value="impact", JMP:R) %>% # head(20)
ggplot(
aes(x=Year, y=impact, group=lang, fill=lang)
) + geom_area(position="fill") +
scale_fill_brewer()
mpg[ ,c(3,8,9)]
