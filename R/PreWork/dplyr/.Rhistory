counties
ggplot(data = counties, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = group))
texas = read.csv("texas.csv")
texas = read.csv("data/texas.csv")
names(counties)
ggplot(data = counties, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = region))
ggplot(data = counties, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = region)) +
guides(fill=FALSE)
ggplot(data = counties, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = subregion)) +
guides(fill=FALSE)
g + geom_polygon(aes(group = group))
tx <- g +
geom_polygon(aes(group = group, fill = bin))
g <- ggplot(data = texas, aes(x = long, y = lat))
g + geom_polygon(aes(group = group))
g <- ggplot(data = texas, aes(x = long, y = lat))
g + geom_polygon(aes(group = group))
tx <- g +
geom_polygon(aes(group = group, fill = bin))
tx1 = tx + ggtitle("Population of Texas Counties")
tx2 = tx + ggtitle("Population of Texas Counties")
str(tx2)
tx2 = tx2 +  coord_map()
tx2 = tx2 +
scale_fill_brewer(palette =
"Blue")
tx2 = tx2 +
scale_fill_brewer(palette =
"Blues")
tx2 = tx2 +
scale_fill_brewer(palette =
"Blues")
tx2
tx2 = tx2 + theme_bw()
tx2 = tx2 + theme_bw() +
xlab("") +
ylab("") +
tx2 = tx2 + theme_bw() +
xlab("") +
ylab("")
tx2 = tx2 + scale_fill_brewer(
palette = "Blues",
name = "Population",
labels = c("0 - 999", "1,000 - 9,999",
"10,000 - 99,999", "100,000 - 999,999",
"1,000,000+"))
tx2
p <- ggplot(data = iris, aes(x = Species, y = Sepal.Length)) +
geom_violin(aes(fill = Species))
p
p <- ggplot(iris, aes(x = Species, y = Sepal.Length)) +
geom_violin(fill = 'gray', alpha = 0.5) +
geom_dotplot(aes(fill = Species), binaxis = "y", stackdir =
"center")
p
library(vcd)
# install.packages("vcd")
library(vcd)
mosaic(Survived ~ Class + Sex, data=Titanic, shade=T,
highlighting_fill=c('red4',"skyblue"),
highlighting_direction="left")
mosaic(Survived ~ Class + Sex, data=Titanic, shade=T,
highlighting_fill=c('red',"green"),
highlighting_direction="left")
library(treemap)
data = read.csv('data/apple.csv', TRUE)
library(treemap)
data = read.csv('data/apple.csv', TRUE)
treemap(data,
index=c("item", "subitem"),
vSize="time1206",
vColor="time1106",
title='Apple Corp. Financial Statements',
palette='RdBu')
library(treemap)
data = read.csv('data/apple.csv', TRUE)
treemap(data,
index=c("item", "subitem"),
vSize="time1206",
vColor="time1106",
title='Apple Corp. Financial Statements',
palette='RdBu')
library(treemap)
data = read.csv('data/apple.csv', TRUE)
treemap(data,
index=c("item", "subitem"),
vSize="time1206",
vColor="time1106",
title='Apple Corp. Financial Statements',
palette='RdBu')
head(data)
summary(data)
p <- ggplot(economics[300:470,], aes(x=date, ymax=psavert, ymin=0) ) +
geom_linerange(color='grey20', size=0.5) +
geom_point(aes(y=psavert), color='red4') +
theme_bw()
p
library(openair)
data(mydata)
calendarPlot(mydata, pollutant = "o3", year = 2003)
library(maps)
library(ggplot2)
world <- map_data("world")
naples <- ggplot(world, aes(x=long, y=lat, group=group) ) +
geom_path(color='gray10', size=0.3) +
geom_point(x=-81, y=26, size=10, shape='*') +
scale_y_continuous(breaks=(-2:2) * 30) +
scale_x_continuous(breaks=(-4:4) * 45) +
coord_map("ortho", orientation=c(26, -80, 0))+
theme(panel.grid.major = element_line(colour = "gray50"),
panel.background = element_rect(fill = "white"),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank() ) +
ggtitle("Naples, Florida")
naples
births <- read.csv(
"births.csv",
stringsAsFactors = FALSE
)
setwd("~/Desktop/dplyr")
births <- read.csv(
"births.csv",
stringsAsFactors = FALSE
)
bnames <- read.csv(
"bnames.csv",
stringsAsFactors = FALSE
)
df <- data.frame(
color = c("blue","black", "blue", "blue","black"),
value = 1:5
)
library(dplyr)
filter(df, color=="blue")
df %>% filter(., color=="blue")
df %>% filter(color=="blue")
summarise(
group_by(
filter(df, color=="blue"),
color
),
mean(value)
)
df %>%
filter(color=="blue") %>%
group_by(color) %>%
summarise(mean(value))
df %>% select(color)
df %>% select(1)
df %>% select(-1)
df $>$ select(-1, -1)
df %>% select(-1, -1)
df %>% select(-1, -2)
df %>% select(value, color)
df %>% select(COLOR=color)
df %>% rename(COLOR=color)
df %>% rename(COLOR=color, New=value)
df
df %>% arrange(desc(value))
df %>% arrange(-1*value)
df %>% summarise(., total = sum(value))
df %>% summarise(., sum(value))
df %>% summarise(., total=sum(value))
(
df %>% summarise(., total=sum(value))
)$total
(
df %>% summarise(., total=sum(value))
)$total[1]
df %>% summarise(., new_col=mean(value)/sd(value))
df %>% summarise(., z=(value - mean(value))/sd(value))
# Ex 1:
bnames %>%
filter(name=="Luke")
bnames %>%
filter(soundex== "L200")
(bnames %>%
filter(soundex== "L200"))$name %>% unique()
colnames(bnames)
bnames %>%
filter(
sex=="girl" & (year ==1900 | year ==2000)
) %>% head()
bnames %>%
filter(
sex=="girl" & year %in% c(1900, 2000)
) %>% head()
bnames %>%
filter(year > 2000 & prop >  0.01) %>% nrow()
bnames %>% select(
starts_with("y"), starts_with("s"), starts_with("p")
)
bnames %>% select(
starts_with("y"), starts_with("s"), starts_with("p")
) %>% head()
colnames(bnames)
bnames %>% select(-year) %>% head()
colnames(bnames)
bnames %>% select(contains("a")) %>% head()
bnames %>% arrange(desc(prop)) %>% head(20)
bnames %>%
filter(name=="Luke") %>%
arrange(desc(prop)) %>%
head()
bnames %>%
mutate(percentage = 100*prop) %>% head()
bnames %>%
mutate(
percentage = paste(100*prop, "%")
) %>% head()
bnames %>%
mutate(
percentage = paste0(100*prop, "%")
) %>% head()
bnames %>%
mutate(
percentage = paste0(
round(100*prop, 2),
"%"
)
) %>% head()
bnames %>%
mutate(
percentage = paste0(
round(100*prop, 2),
"%"
)
) %>% arrage(percentage) %>% head(50)
bnames %>%
mutate(
percentage = paste0(
round(100*prop, 2),
"%"
)
) %>% arrange(percentage) %>% head(50)
bnames %>%
mutate(
percentage = paste0(
round(100*prop, 2),
"%"
)
) %>% arrange(round(100*prop, 2))
bnames %>%
mutate(
percentage = ifelse(
prop < 0.0001,
"less than 0.01%",
paste0(round(100*prop, 2), "%")
)
) %>% arrange(prop)
bnames %>%
mutate(
percentage = ifelse(
prop < 0.0001,
"less than 0.01%",
paste0(round(100*prop, 2), "%")
)
) %>% arrange(desc(prop))
prop2perc <- function(prop){
ifelse(
prop < 0.0001,
"less than 0.01%",
paste0(round(100*prop, 2), "%")
)
}
prop2perc(0.2)
prop2perc(0.02)
prop2perc(0.000002)
bnames %>%
mutate(
percentage = prop2perc(prop)
) %>% arrange(desc(prop)) %<% head()
bnames %>%
mutate(
percentage = prop2perc(prop)
) %>% arrange(desc(prop)) %>% head()
summary(bnames)
x = data.frame( name = c("John", "Paul", "George",
"Ringo", "Stuart", "Pete"),
instrument = c("guitar", "bass", "guitar",
"drums", "bass", "drums"),
stringsAsFactors = FALSE)
x
y <- data.frame( name = c("John", "Paul", "George",
"Ringo", "Brian"),
band = c(TRUE, TRUE, TRUE,
TRUE, FALSE),
stringsAsFactors = FALSE)
inner_join(x, y, by = "name")
x
y
inner_join(x, y, by = "name")
bnames2 = inner_join(bnames, births,
by = c("year","sex"))
bnames2 %>% head(0)
bnames2 %>% head()
bnames2 = bnames %>%
inner_join(births, by = c("year","sex")) %>%
mutate(cnt = prop*births) %>% head()
bnames2 = bnames %>%
inner_join(births, by = c("year","sex")) %>%
mutate(cnt = prop*births)
bnames2 %>% head()
bnames2 = bnames %>%
inner_join(births, by = c("year","sex")) %>%
mutate(n = round(prop*births))
bnames2 %>% head()
by_color = df %>% group_by(., color)
class(by_color)
by_color
summary = summarise(group_by(bnames2, name, year), total=sum(n)) %>% head()
summary %>% head()
bnames2 %>%
group_by(name, year) %>%
summarise(total=sum(n))
bnames %>%
inner_join(., births, by=c('year','sex')) %>%
mutate(., n=round(prop * births)) %>%
group_by(., name, year) %>%
summarise(., total=sum(n)) %>%
filter(., name=='Vivian') %>%
arrange(., desc(total) )%>%
top_n(5)
system.time({
bnames %>%
inner_join(births, by=c('year','sex')) %>%
mutate(n=round(prop * births)) %>%
group_by(name, year) %>%
summarise(total=sum(n)) %>%
filter(name=='Vivian') %>%
arrange(desc(total) )%>%
top_n(5)
})
system.time({
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
mutate(n=round(prop * births)) %>%
group_by(name, year) %>%
summarise(total=sum(n)) %>%
arrange(desc(total) )%>%
top_n(5)
})
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
mutate(n=round(prop * births)) %>%
group_by(year) %>%
summarise(total=sum(n)) %>%
arrange(desc(total) )%>%
top_n(5)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
mutate(n=round(prop * births)) %>%
group_by(name, year) %>%
summarise(total=sum(n)) %>%
arrange(desc(total) )%>%
top_n(5)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(total=sum(round(prop * births))) %>%
arrange(desc(total) )%>%
head(5)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>% head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
filter(year==1880)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births)),
baby_count = sum(births),
vivian_prop = vivian_count/baby_count
) %>%
arrange(desc(vivian_prop) )%>%
head(5)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
mutate(n=round(prop * births)) %>%
group_by(name, year) %>%
summarise(total=sum(n)) %>%
arrange(desc(total) )%>%
top_n(5)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births)),
baby_count = sum(births),
vivian_prop = vivian_count/baby_count
) %>%
arrange(desc(vivian_prop) )%>%
filter(year==1920)
bnames %>% head(50)
bnames %>%
filter(name=='Vivian') %>%  head(50)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>% head(50)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>% head(500)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%  head(50)
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%  filter(year ==1928)
summarise(
vivian_count = sum(round(prop * births))
) %>% head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births))
) %>% head()
births %>% group_by(year) %>% summarise(baby_count=sum(births)) %>% head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births))
) %>% head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births))
) %>%
inner_join(
births %>% group_by(year) %>% summarise(baby_count=sum(births)),
by="year"
)
arrange(desc(vivian_count/baby_count) )%>%
head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births))
) %>%
inner_join(
births %>% group_by(year) %>% summarise(baby_count=sum(births)),
by="year"
) %>% head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(
vivian_count = sum(round(prop * births))
) %>%
inner_join(
births %>% group_by(year) %>% summarise(baby_count=sum(births)),
by="year"
) %>%
arrange(desc(vivian_count/baby_count) )%>%
head()
bnames %>%
filter(name=='Vivian') %>%
inner_join(births, by=c('year','sex')) %>% head()
bnames %>%
inner_join(births, by=c('year','sex')) %>% head()
bnames
bnames %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(total=sum(prop*births)) %>% head()
bnames %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(total=sum(prop*births)) %>% head()
bnames %>%
inner_join(births, by=c('year','sex')) %>%
group_by(name, year) %>%
summarise(total=sum(prop*births)) %>%
summarise(sum(total))
bnames %>%
inner_join(births, by=c('year','sex')) %>%
group_by(year, name) %>%
summarise(total=sum(prop*births)) %>%
summarise(sum(total))
b=1
sum(a){
a+ b
}
sum_ <- function(a){
a+ b
}
sum_(9)
