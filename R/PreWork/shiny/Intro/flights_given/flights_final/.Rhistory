stroke = FALSE,
opacity = 1,
color = ~factpal(offense)) %>%
addLegend(pal = factpal, values = ~offense)
addCircles_group <- function(map, data, group) {
addCircles(map = map,
data = data,
group = group,
lng = ~lon,
lat = ~lat,
radius = 200,
stroke = FALSE,
opacity = 1,
color = ~factpal(offense))
}
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
setView(lng = houston_center$lon,
lat = houston_center$lat,
zoom = 10) %>%
addCircles_group(data = crime %>% filter(between(hour, 4, 11)),
group = "Morning") %>%
addCircles_group(data = crime %>% filter(between(hour, 12, 19)),
group = "Afternoon") %>%
addCircles_group(data = crime %>% filter(!between(hour, 4, 19)),
group = "Evening") %>%
addLegend(pal = factpal, values = crime$offense) %>%
addLayersControl(baseGroups = c("Morning", "Afternoon", "Evening"))
install.packages(randomForest)
install.packages("randomForest")
?randomForest::randomForest
?randomForest::rfcv
?predict
install.packages("Hotelling")
library(Hotelling)
library(data.table)
library(dplyr)
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE)
View(lc)
Hotelling::hotelling.stat
View(lc)
lc %>% .[group == "C"]
lc %>% .[group == "C", -group]
lc %>% .[group == "C", -c(1,2)]
lc %>% .[group == "C", -c(1,2,44)]
hotelling.stat(lc %>% .[group == "C", -c(1,2,44)],
lc %>% .[group == "E", -c(1,2,44)])
fread(input = "~/Downloads/logcheck.csv",
header = TRUE) %>% .[, 3.3]
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE) %>% .[, 3.3 := int(3.3)]
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE) %>% .[, 3.3 := as.integer(3.3)]
hotelling.stat(lc %>% .[group == "C", -c(1,2,44)],
lc %>% .[group == "E", -c(1,2,44)])
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE) %>% .[, 3.3 := as.integer(3.3)]
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE)
lc$3`3.3` <- as.integer(lc$`3.3`)
lc$`3.3` <- as.integer(lc$`3.3`)
lc$`3.3` <- as.integer(lc$`3.3`)
lc$`4.1` <- as.integer(lc$`4.1`)
hotelling.stat(lc %>% .[group == "C", -c(1,2,44)],
lc %>% .[group == "E", -c(1,2,44)])
hs <- hotelling.test(lc %>% .[group == "C", -c(1,2,44)],
lc %>% .[group == "E", -c(1,2,44)])
hs
summary(hs)
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE)
rm(list = ls())
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE)
str(lc)
lc[,c("c3", "d1") := list(as.integer(c3), as.integer(d1))]
str(lc)
hs <- hotelling.test(lc %>% .[group == "C", -c(1,2,44)],
lc %>% .[group == "E", -c(1,2,44)], )
summary(hs)
hs
library(data.table)
library(dplyr)
library(Hotelling)
lc <- fread("./logcheck.csv",header = TRUE) # assume LogCheck_Use of 1033 is 0.65, will be update later
lc <- fread("~/Downloads/logcheck.csv",
header = TRUE) # assume LogCheck_Use of 1033 is 0.65, will be update later
controly <- lc %>% filter(group == "C") %>% select(-group, -ID,-LogCheckUsage)
expy.all <- lc %>% filter(group == "E") %>% select(-group, -ID)
expy <- lc %>% filter(group == "E") %>% select(-group, -ID,-LogCheckUsage)
lc$c3 <- as.integer(lc$c3)
lc$d1 <- as.integer(lc$d1)
expy.all <- expy.all %>% mutate(a1.new = as.factor(ifelse(a1> 0, "Yes", "No")))
ht.all <- hotelling.test(controly,expy)
ht.all
ht.a1 <- hotelling.test(controly$a1,expy$a1)
ht.a1
ftest.a1=var.test(controly$a1,expy$a1)
ftest.a1
ttest.a1=t.test(expy$a1,controly$a1,alternative = "greater")
ttest.a1
wmh.a1=wilcox.test(lc$a1~lc$group)
wmh.a1
lm.a1 <- lm(a1~LogCheckUsage, data=expy.all)
ttest.a1=t.test(expy$a1,controly$a1,alternative = "greater")
ttest.a1
ttest.a1$p.value
ttest.a1 <- t.test(expy$a1,controly$a1,alternative = "greater")
ttest.a1$p.value
?t.test
ttest <- function(coln, label) {
col_1 <- coln[label == unique(label)[1]]
col_2 <- coln[label == unique(label)[2]]
ttest.a1 <- t.test(col_1, col_2, alternative = "greater")
ttest.a1$p.value
}
sapply(function(x) ttest(x, lc$group), lc %>%
select(-group, -ID, -LogCheckUsage))
library(data.table)
library(dplyr)
library(Hotelling)
lc <- fread("~/Downloads/logcheck.csv",
header = TRUE) # assume LogCheck_Use of 1033 is 0.65, will be update later
ttest <- function(coln, label) {
col_1 <- coln[label == unique(label)[1]]
col_2 <- coln[label == unique(label)[2]]
ttest.a1 <- t.test(col_1, col_2, alternative = "greater")
ttest.a1$p.value
}
sapply(function(x) ttest(x, lc$group), lc %>%
select(-group, -ID, -LogCheckUsage))
sapply(function(x) ttest(x, lc$group), lc[,3:5])
sapply(lc[,3:5], function(x) ttest(x, lc$group))
ttest <- function(coln, label) {
col_C <- coln[label == "C"]
col_E <- coln[label == "E"]
t.test(col_C, col_E, alternative = "greater")$p.value
}
sapply(lc %>%
select(-group, -ID, -LogCheckUsage),
function(x) ttest(x, lc$group))
lc[,c("c3", "d1") := list(as.integer(c3), as.integer(d1))]
ttest <- function(coln, group) {
col_C <- coln[group == "C"]
col_E <- coln[group == "E"]
t.test(col_C, col_E, alternative = "greater")$p.value
}
sapply(lc %>%
select(-group, -ID, -LogCheckUsage),
function(x) ttest(x, lc$group))
ttest <- function(coln, group) {
col_C <- coln[group == "C"]
col_E <- coln[group == "E"]
t.test(col_E, col_C, alternative = "greater")$p.value
}
sapply(lc %>%
select(-group, -ID, -LogCheckUsage),
function(x) ttest(x, lc$group))
View(lc)
View(lc)
library(VIM)
VIM::aggr(lc)
ttest <- function(coln, group) {
col_C <- coln[group == "C"]
col_E <- coln[group == "E"]
t.test(col_E, col_C, alternative = "greater")$p.value
}
sapply(lc %>%
select(-group, -ID, -LogCheckUsage),
function(x) ttest(x, lc$group))
library(Hotelling)
library(data.table)
library(dplyr)
rm(list = ls())
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE)
lc[,c("c3", "d1") := list(as.integer(c3), as.integer(d1))]
?wilcox.test
ttest <- function(coln, group){
ttest <- function(coln, group){
col_C <- coln[group == 'C']
col_E <- coln[group == 'E']
t.test(col_E, col_C, alternative = 'greater')$p.value
}
sapply(lc %>%
select(-group, -ID, -LogCheckUsage),
function(x)ttest(x,lc$group))
wmw <- function(coln, group) {
col_C <- coln[group == 'C']
col_E <- coln[group == 'E']
wilcox.test(col_E, col_C, alternative = 'greater')$p.value
}
wmw.p <- sapply(lc %>% select(-group, -ID, -LogCheckUsage),
function(x) wmw(x,lc$group))
wmw <- function(coln, group) {
col_C <- coln[group == 'C']
col_E <- coln[group == 'E']
wilcox.test(col_E, col_C, alternative = 'two.sided')$p.value
}
wmw.p <- sapply(lc %>% select(-group, -ID, -LogCheckUsage),
function(x) wmw(x,lc$group))
wmw <- function(coln, group) {
wilcox.test(coln ~ group)$p.value
}
wmw.p <- sapply(lc %>% select(-group, -ID, -LogCheckUsage),
function(x) wmw(x,lc$group))
wmw <- function(coln, group) {
col_C <- coln[group == 'C']
col_E <- coln[group == 'E']
wilcox.test(col_E, col_C, alternative = 'greater')$p.value
}
wmw.p <- sapply(lc %>% select(-group, -ID, -LogCheckUsage),
function(x) wmw(x,lc$group))
wmw.p
ttest.p <- sapply(lc %>% select(-group, -ID, -LogCheckUsage),
function(x)ttest(x,lc$group))
wmw.p
ttest.p
plot(wmw.p, ttest.p)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
test <- cbind(wmw = wmw.p, ttest = ttest.p)
ggplot(test, aes(wmw, ttest)) %>%
geom_point()
test.p <- cbind(wmw = wmw.p, ttest = ttest.p)
test.p <- cbind(wmw = wmw.p, ttest = ttest.p)
View(test.p)
ggplot(test.p, aes(x = wmw, y = ttest)) %>%
geom_point()
library(ggplot2)
ggplot(test.p, aes(x = wmw, y = ttest)) %>%
geom_point()
test.p <- as.data.frame(cbind(wmw = wmw.p, ttest = ttest.p))
ggplot(test.p, aes(x = wmw, y = ttest)) %>%
geom_point()
ggplot(test.p, aes(x = wmw, y = ttest))
ggplot(test.p, aes(x = wmw, y = ttest)) %>%
geom_point()
test.p <- as.data.frame(cbind(wmw = wmw.p, ttest = ttest.p))
ggplot(test.p, aes(x = wmw, y = ttest)) +
geom_point()
lc_e <- lc %>%
filter(group == "E") %>%
select(-group, -ID, -LogCheckUsage)
lc_e <- lc %>%
filter(group == "E") %>%
select(-group, -ID)
lc_e <- lc %>%
filter(group == "E") %>%
select(-group, -ID)
sapply(lc_e %>% select(-LogCheckUsage),
function(x), cor(x, lc_e$LogCheckUsage, method = "pearson"))
sapply(lc_e %>% select(-LogCheckUsage),
function(x) cor(x, lc_e$LogCheckUsage, method = "pearson"))
?cor
sapply(lc_e %>% select(-LogCheckUsage),
function(x) cor(x, lc_e$LogCheckUsage,
method = "pearson",
use = "pairwise.complete.obs"))
cor_e <- sapply(lc_e %>% select(-LogCheckUsage),
function(x) cor(x, lc_e$LogCheckUsage,
method = "pearson",
use = "pairwise.complete.obs"))
hist(cor_e)
Filter(function(x) x > .2, cor_e)
lin_e <- sapply(lc_e %>% select(c1,c2,e4,g2,g3),
function(x) lm(x~lc_e$LogCheckUsage)
)
View(lin_e)
lin_e[1]
lin_e[[1]]
lin_e[[1]]$p.value
summary(lin_e)
summary(lin_e[[1]])
summary(lm1.1)
lm.a1 <- lm(a1~LogCheckUsage, data=expy.all)
lmfit <- lm(x = lc_e$LogCheckUsage, y = lc_e$c1)
lmfit <- lm(formula = c1 ~ LogCheckUsage, data = lc_e)
lmfit
summary(lmfit)
summary(lmfit)$p-value
lmfit$p-value
lmfit$`p-value``
lmfit$`p-value`
summary(lmfit)$`p-value``
summary(lmfit)$`p-value`
summary(lmfit)$coefficients[,4]
lin_e <- sapply(lc_e %>% select(c1,c2,e4,g2,g3),
function(x) summary(lm(x~lc_e$LogCheckUsage)$coefficients[,4][2]
)
lin_e <- sapply(lc_e %>% select(c1,c2,e4,g2,g3),
function(x) summary(lm(x~lc_e$LogCheckUsage))$coefficients[,4][2]
)
lin_e
summary(lmfit)$coefficients[,4]
summary(lmfit)$coefficients
summary(lmfit)
summary(lmfit)$coefficients[,c(1,4)][2]
summary(lmfit)$coefficients[,c(1,4)]
summary(lmfit)$coefficients[2,c(1,4)]
for (col in lc_e %>% select(c1,c2,e4,g2,g3)) {
summary(lm(x = col, y = lc_e$LogCheckUsage))
}
for (col in lc_e %>% select(c1,c2,e4,g2,g3)) {
summary(lm(LogCheckUsage ~ col, data = lc_e))
}
for (col in lc_e %>% select(c1,c2,e4,g2,g3)) {
print(summary(lm(LogCheckUsage ~ col, data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
print(summary(lm(as.formula(paste("LogCheckUsage ~", col)), data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
fm <- as.formula(paste("LogCheckUsage ~", col))
print(summary(lm(formula = fm, data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
print(summary(lm(formula(paste("LogCheckUsage ~", col)), data = lc_e)))
}
formula(paste("LogCheckUsage ~", "c1")
)
formula(paste("LogCheckUsage ~", col))
for (col in c("c1","c2","e4","g2","g3")) {
print(summary(lm(formula(paste("LogCheckUsage ~", col)), data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
print(summary(lm(paste("LogCheckUsage ~", col), data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, "/n")
print(summary(lm(paste("LogCheckUsage ~", col), data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, "\n")
print(summary(lm(paste("LogCheckUsage ~", col), data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, ":\n")
print(summary(lm(paste("LogCheckUsage ~", col), data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, ":\n")
print(summary(lm(LogCheckUsage ~ col, data = lc_e)))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, ":\n")
print(summary(lm(col~lc_e$LogCheckUsage)))
}
for (col in lc_e[,c("c1","c2","e4","g2","g3")]) {
cat(col, ":\n")
print(summary(lm(col~lc_e$LogCheckUsage)))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, ":\n")
print(summary(lm(paste(col, "~ LogCheckUsage"), data = lc_e))
}
for (col in c("c1","c2","e4","g2","g3")) {
cat(col, ":\n")
print(summary(lm(paste(col, "~ LogCheckUsage"), data = lc_e)))
}
View(lc_e)
lc_e <- lc_e %>%
mutate(c1.bin = as.factor(ifelse(c1 > 0, "Yes", "No")),
c2.bin = as.factor(ifelse(c2 > 0, "Yes", "No")),
e4.bin = as.factor(ifelse(e4 > 0, "Yes", "No")),
g2.bin = as.factor(ifelse(g2 > 0, "Yes", "No")),
g3.bin = as.factor(ifelse(g3 > 0, "Yes", "No")))
for (col in c("c1.bin","c2.bin","e4.bin","g2.bin","g3.bin")) {
cat(col, ":\n")
print(summary(glm(paste(col, "~ LogCheckUsage"), data = lc_e)))
}
lc_e <- lc_e %>%
mutate(c1.bin = as.factor(ifelse(c1 > 0, "Yes", "No")),
c2.bin = as.factor(ifelse(c2 > 0, "Yes", "No")),
e4.bin = as.factor(ifelse(e4 > 0, "Yes", "No")),
g2.bin = as.factor(ifelse(g2 > 0, "Yes", "No")),
g3.bin = as.factor(ifelse(g3 > 0, "Yes", "No")))
glm(c1.bin ~ LogCheckUsage, data = lc_e, family = "binomial")
lc_e <- lc_e %>%
mutate(c1.bin = as.factor(ifelse(c1 > 0, "Yes", "No")),
c2.bin = as.factor(ifelse(c2 > 0, "Yes", "No")),
e4.bin = as.factor(ifelse(e4 > 0, "Yes", "No")),
g2.bin = as.factor(ifelse(g2 > 0, "Yes", "No")),
g3.bin = as.factor(ifelse(g3 > 0, "Yes", "No")))
glm(c1.bin ~ LogCheckUsage, data = lc_e, family = "binomial")
for (col in c("c1.bin","c2.bin","e4.bin","g2.bin","g3.bin")) {
cat(col, ":\n")
print(summary(glm(paste(col, "~ LogCheckUsage"), data = lc_e, family = "binomial")))
}
?hotel.stat
data(container.df)
split.data = split(container.df[,-1],container.df$gp)
x = split.data[[1]]
y = split.data[[2]]
x
y
hotelling.stat(x, y)
library(Hotelling)
library(data.table)
library(dplyr)
rm(list = ls())
lc <- fread(input = "~/Downloads/logcheck.csv",
header = TRUE)
str(lc)
lc[,c("c3", "d1") := list(as.integer(c3), as.integer(d1))]
lc_c <- lc[group == "C", LogCheckUsage = NULL]
lc_c <- lc[group == "C",] %>%
select(-LogCheckUsage)
lc_e <- lc[group == "E",] %>%
select(-LogCheckUsage)
hotelling.stat(lc_c, lc_e)
lc_c <- lc[group == "C",] %>%
select(-LogCheckUsage, -group, -ID)
lc_e <- lc[group == "E",] %>%
select(-LogCheckUsage, -group, -ID)
hotelling.stat(lc_c, lc_e)
summary(hotelling.stat(lc_c, lc_e))
ho <- hotelling.stat(lc_c, lc_e)
ho
hotelling.stat(x, y)
data(container.df)
split.data = split(container.df[,-1],container.df$gp)
x = split.data[[1]]
y = split.data[[2]]
hotelling.stat(x, y)
hotelling.stat(x, y, TRUE)
summary(hotelling.stat(x, y, TRUE))
summary(hotelling.stat(x, y))
ho <- hotelling.stat(x, y)
ho
ho <- hotel.test(x, y)
ho
ho <- hotel.test(lc_c, lc_e)
ho
ho <- hotel.stat(lc_c, lc_e)
ho
View(lc_c)
View(lc_e)
View(x)
ho <- hotelling.stat(lc_c[, c("a1", "a2", "a3")], lc_e[, c("a1", "a2", "a3")])
ho
View(lc_e)
View(lc_e)
View(lc_c)
ho <- hotel.stat(complete.cases(lc_c), complete.cases(lc_e))
ho <- hotelling.stat(complete.cases(lc_c[, c("a1", "a2", "a3")]),
complete.cases(lc_e[, c("a1", "a2", "a3")]))
complete.cases(lc_c[, c("a1", "a2", "a3")])
ho <- hotelling.stat(lc_c[complete.cases(lc_c[, c("a1", "a2", "a3")]),],
lc_e[complete.cases(lc_e[, c("a1", "a2", "a3")]),])
ho
ho <- hotelling.test(lc_c[complete.cases(lc_c[, c("a1", "a2", "a3")]),],
lc_e[complete.cases(lc_e[, c("a1", "a2", "a3")]),])
ho
install.packages("rrcov")
library(rrcov)
ho <- T2.test(lc_c[complete.cases(lc_c[, c("a1", "a2", "a3")]),],
lc_e[complete.cases(lc_e[, c("a1", "a2", "a3")]),])
?T2.test
ho <- hotelling.test(lc_c[complete.cases(lc_c[, c("a1", "a2", "a3")]),],
lc_e[complete.cases(lc_e[, c("a1", "a2", "a3")]),])
ho
ho <- hotelling.test(lc_c[complete.cases(lc_c[, c("a1", "a2", "a3")]),],
lc_e[complete.cases(lc_e[, c("a1", "a2", "a3")]),],
shrinkage = TRUE)
ho <- T2.test(complete.cases(lc_c), complete.cases(lc_e))
ho <- T2.test(lc_c, lc_e)
lc_c <- lc[group == "C",] %>%
select(-LogCheckUsage, -group, -ID)
lc_e <- lc[group == "E",] %>%
select(-LogCheckUsage, -group, -ID)
ht <- hotel.test(lc_c, lc_e)
ht
summary(ht)
ht$stats
shiny::runApp('~/Workspace/ShinyTuturial/shinyDemo')
runApp('~/Workspace/ShinyTuturial/shinyDemo')
runApp('~/Workspace/ShinyTuturial/shinyDemo')
runApp('~/Workspace/ShinyTuturial/shinyDemo')
?selectInput
runApp('~/Workspace/ShinyTuturial/shinyDemo')
shiny::runApp('~/Workspace/ShinyTuturial/shinyDemo')
runApp('~/Workspace/ShinyTuturial/shinyDemo')
runApp('~/Workspace/ShinyTuturial/shinyDemo')
shiny::runApp('~/Workspace/ShinyTuturial/flights')
runApp('~/Workspace/ShinyTuturial/flights')
runApp('~/Workspace/ShinyTuturial/flights')
flights <- fread(file = "./flights14.csv")
flights <- fread(file = "flights14.csv")
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("~/Workspace/ShinyTuturial/flights/")
flights <- fread(file = "flights14.csv")
View(flights)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(flights)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
